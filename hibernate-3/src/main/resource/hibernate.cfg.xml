<?xml version='1.0' encoding='utf-8'?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later.
  ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>

        <!-- Database connection settings -->
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="connection.url">jdbc:mysql://localhost:3306/hibernate?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</property>
        <property name="connection.username">root</property>
        <property name="connection.password"/>

        <!-- SQL dialect -->
        <!-- 方言：生成该种数据库识别的sql语言 -->
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>

        <!-- Echo all executed SQL to stdout -->
        <property name="show_sql">true</property>
        <property name="format_sql">true</property>
        <!-- create先删除再创建 -->
        <!-- update表不存在就创建，表不一样就更新，表一样就什么都不做 一般适合增加表结构信息，如果修改表结果，可能无效，比如name的长度为20，插入数据后，有改为1，这时无效-->
        <!-- create-drop初始化时创建表，SessionFactory执行close()时删除表 -->
        <!-- validate验证表结构是否一致，如果不一致就抛异常，生成环境下用 -->
        <!-- <property name="hbm2ddl.auto">create</property> -->

        <!-- Drop and re-create the database schema on startup -->
        <property name="hbm2ddl.auto">update</property>

        <mapping resource="Department.hbm.xml"/>
        <mapping resource="Employee.hbm.xml"/>

    </session-factory>

</hibernate-configuration>